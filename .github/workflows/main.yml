name: Terraform CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: "Choose Terraform Action: destroy"
        required: true
        default: "destroy"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  SECRET_NAME: ${{ secrets.SECRET_NAME }}
  TERRAFORM_VERSION: "1.7.2"

jobs:
  plan:
    if: github.event_name == 'push'
    name: Plan Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_DEFAULT_REGION

      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var secret_name=$SECRET_NAME -out "plan.out"

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: plan.out

  apply:
    if: github.event_name == 'push'
    name: Deploy Terraform
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_DEFAULT_REGION

      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .

      - name: Terraform Apply
        run: terraform apply -auto-approve plan.out

  destroy:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    name: Terraform Destroy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_DEFAULT_REGION

      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -var secret_name=$SECRET_NAME -auto-approve
